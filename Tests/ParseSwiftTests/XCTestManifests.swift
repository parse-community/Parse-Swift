#if !canImport(ObjectiveC)
import XCTest

extension APICommandTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__APICommandTests = [
        ("testErrorFromParseServer", testErrorFromParseServer),
        ("testErrorHTTPJSON", testErrorHTTPJSON),
        ("testErrorHTTPReturnsParseError1", testErrorHTTPReturnsParseError1),
        ("testExecuteCorrectly", testExecuteCorrectly),
        ("testIdempodency", testIdempodency),
    ]
}

extension AnyCodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AnyCodableTests = [
        ("testJSONDecoding", testJSONDecoding),
        ("testJSONEncoding", testJSONEncoding),
    ]
}

extension AnyDecodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AnyDecodableTests = [
        ("testJSONDecoding", testJSONDecoding),
    ]
}

extension AnyEncodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AnyEncodableTests = [
        ("testJSONEncoding", testJSONEncoding),
    ]
}

extension BatchUtilsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BatchUtilsTests = [
        ("testSplitArrayComplexSegments", testSplitArrayComplexSegments),
        ("testSplitArrayEvenMoreSegments", testSplitArrayEvenMoreSegments),
        ("testSplitArrayExactSegments", testSplitArrayExactSegments),
        ("testSplitArrayLessSegments", testSplitArrayLessSegments),
        ("testSplitArrayMoreSegments", testSplitArrayMoreSegments),
    ]
}

extension HashTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HashTests = [
        ("testMD5HashFromUnicode", testMD5HashFromUnicode),
        ("testMD5SimpleHash", testMD5SimpleHash),
    ]
}

extension KeychainStoreTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__KeychainStoreTests = [
        ("testGetAnyCodableObject", testGetAnyCodableObject),
        ("testGetObject", testGetObject),
        ("testGetObjectBoolTypedSubscript", testGetObjectBoolTypedSubscript),
        ("testGetObjectStringTypedSubscript", testGetObjectStringTypedSubscript),
        ("testGetObjectSubscript", testGetObjectSubscript),
        ("testGetObjectWrongBoolTypedSubscript", testGetObjectWrongBoolTypedSubscript),
        ("testGetObjectWrongStringTypedSubscript", testGetObjectWrongStringTypedSubscript),
        ("testRemoveAllObjects", testRemoveAllObjects),
        ("testRemoveObject", testRemoveObject),
        ("testRemoveObjectSubscript", testRemoveObjectSubscript),
        ("testSetComplextObject", testSetComplextObject),
        ("testSetObject", testSetObject),
        ("testThreadSafeRemoveAllObjects", testThreadSafeRemoveAllObjects),
        ("testThreadSafeRemoveObject", testThreadSafeRemoveObject),
        ("testThreadSafeSet", testThreadSafeSet),
    ]
}

extension ParseACLTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseACLTests = [
        ("testCoding", testCoding),
        ("testDefaultACL", testDefaultACL),
        ("testDefaultACLDontUseCurrentUser", testDefaultACLDontUseCurrentUser),
        ("testDefaultACLNoUser", testDefaultACLNoUser),
        ("testPublicAccess", testPublicAccess),
        ("testReadAccess", testReadAccess),
        ("testReadAccessObject", testReadAccessObject),
        ("testSetACLOfObjectWithDefaultACL", testSetACLOfObjectWithDefaultACL),
        ("testWriteAccess", testWriteAccess),
        ("testWriteAccessObject", testWriteAccessObject),
    ]
}

extension ParseAnonymousTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseAnonymousTests = [
        ("testAuthenticationKeys", testAuthenticationKeys),
        ("testLogin", testLogin),
        ("testReplaceAnonymousWithBecome", testReplaceAnonymousWithBecome),
        ("testReplaceAnonymousWithUser", testReplaceAnonymousWithUser),
        ("testReplaceAnonymousWithUsernameChange", testReplaceAnonymousWithUsernameChange),
        ("testStrip", testStrip),
    ]
}

extension ParseAppleCombineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseAppleCombineTests = [
        ("testLink", testLink),
        ("testLogin", testLogin),
        ("testUnlink", testUnlink),
    ]
}

extension ParseAppleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseAppleTests = [
        ("testAuthenticationKeys", testAuthenticationKeys),
        ("testLinkLoggedInUserWithApple", testLinkLoggedInUserWithApple),
        ("testLogin", testLogin),
        ("testReplaceAnonymousWithApple", testReplaceAnonymousWithApple),
        ("testReplaceAnonymousWithLinkedApple", testReplaceAnonymousWithLinkedApple),
        ("testUnlink", testUnlink),
    ]
}

extension ParseAuthenticationCombineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseAuthenticationCombineTests = [
        ("testLogin", testLogin),
    ]
}

extension ParseAuthenticationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseAuthenticationTests = [
        ("testAuthStrip", testAuthStrip),
        ("testIsLinkedWithString", testIsLinkedWithString),
        ("testLinkCommand", testLinkCommand),
    ]
}

extension ParseCloudCombineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseCloudCombineTests = [
        ("testFunction", testFunction),
        ("testJob", testJob),
    ]
}

extension ParseCloudTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseCloudTests = [
        ("testCallFunctionCommand", testCallFunctionCommand),
        ("testCallFunctionWithArgsCommand", testCallFunctionWithArgsCommand),
        ("testCallJobCommand", testCallJobCommand),
        ("testCallJobWithArgsCommand", testCallJobWithArgsCommand),
        ("testFunction", testFunction),
        ("testFunction2", testFunction2),
        ("testFunctionError", testFunctionError),
        ("testFunctionMainQueue", testFunctionMainQueue),
        ("testFunctionMainQueue2", testFunctionMainQueue2),
        ("testFunctionMainQueueError", testFunctionMainQueueError),
        ("testJob", testJob),
        ("testJob2", testJob2),
        ("testJobError", testJobError),
        ("testJobMainQueue", testJobMainQueue),
        ("testJobMainQueue2", testJobMainQueue2),
        ("testJobMainQueueError", testJobMainQueueError),
        ("testJSONEncoding2", testJSONEncoding2),
        ("testJSONEncoding", testJSONEncoding),
        ("testParseEncoding2", testParseEncoding2),
        ("testParseEncoding", testParseEncoding),
    ]
}

extension ParseConfigCombineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseConfigCombineTests = [
        ("testFetch", testFetch),
        ("testSave", testSave),
    ]
}

extension ParseConfigTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseConfigTests = [
        ("testDeleteFromKeychainOnLogout", testDeleteFromKeychainOnLogout),
        ("testFetch", testFetch),
        ("testFetchAsync", testFetchAsync),
        ("testFetchCommand", testFetchCommand),
        ("testSave", testSave),
        ("testSaveAsync", testSaveAsync),
        ("testUpdateCommand", testUpdateCommand),
    ]
}

extension ParseEncoderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseEncoderTests = [
        ("testNestedContatiner", testNestedContatiner),
        ("testSkipKeysDefaultCodingKeys", testSkipKeysDefaultCodingKeys),
    ]
}

extension ParseFileCombineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseFileCombineTests = [
        ("testDelete", testDelete),
        ("testFetch", testFetch),
        ("testFetchFileProgress", testFetchFileProgress),
        ("testSave", testSave),
        ("testSaveFileProgress", testSaveFileProgress),
    ]
}

extension ParseFileManagerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseFileManagerTests = [
        ("testCopyItem", testCopyItem),
        ("testMoveContentsOfDirectory", testMoveContentsOfDirectory),
        ("testMoveItem", testMoveItem),
        ("testWriteData", testWriteData),
    ]
}

extension ParseFileTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseFileTests = [
        ("testCloudFileCancel", testCloudFileCancel),
        ("testCloudFileProgress", testCloudFileProgress),
        ("testDeleteCommand", testDeleteCommand),
        ("testDeleteFile", testDeleteFile),
        ("testDeleteFileAysnc", testDeleteFileAysnc),
        ("testDeleteFileNoMasterKey", testDeleteFileNoMasterKey),
        ("testDeleteNoMasterKeyFileAysnc", testDeleteNoMasterKeyFileAysnc),
        ("testDownloadCommand", testDownloadCommand),
        ("testFetchFile", testFetchFile),
        ("testFetchFileAysnc", testFetchFileAysnc),
        ("testFetchFileCancelAsync", testFetchFileCancelAsync),
        ("testFetchFileProgress", testFetchFileProgress),
        ("testFetchFileProgressAsync", testFetchFileProgressAsync),
        ("testFetchFileStream", testFetchFileStream),
        ("testFileEquality", testFileEquality),
        ("testLocalUUID", testLocalUUID),
        ("testSave", testSave),
        ("testSaveAysnc", testSaveAysnc),
        ("testSaveCloudFile", testSaveCloudFile),
        ("testSaveCloudFileAysnc", testSaveCloudFileAysnc),
        ("testSaveCloudFileProgressAysnc", testSaveCloudFileProgressAysnc),
        ("testSaveFileCancelAsync", testSaveFileCancelAsync),
        ("testSaveFileProgressAsync", testSaveFileProgressAsync),
        ("testSaveFileStream", testSaveFileStream),
        ("testSaveFileStreamCancel", testSaveFileStreamCancel),
        ("testSaveFileStreamProgress", testSaveFileStreamProgress),
        ("testSaveLocalFile", testSaveLocalFile),
        ("testSaveLocalFileAysnc", testSaveLocalFileAysnc),
        ("testSaveWithSpecifyingMime", testSaveWithSpecifyingMime),
        ("testSaveWithSpecifyingMimeAysnc", testSaveWithSpecifyingMimeAysnc),
        ("testUploadCommand", testUploadCommand),
    ]
}

extension ParseGeoPointTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseGeoPointTests = [
        ("testDebugGeoPoint", testDebugGeoPoint),
        ("testDefaults", testDefaults),
        ("testGeoPointEncoding", testGeoPointEncoding),
        ("testGeoPointFromLocation", testGeoPointFromLocation),
        ("testGeoUtilityDistance", testGeoUtilityDistance),
    ]
}

extension ParseInstallationCombineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseInstallationCombineTests = [
        ("testDelete", testDelete),
        ("testDeleteAll", testDeleteAll),
        ("testFetch", testFetch),
        ("testFetchAll", testFetchAll),
        ("testSave", testSave),
        ("testSaveAll", testSaveAll),
    ]
}

extension ParseInstallationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseInstallationTests = [
        ("testDelete", testDelete),
        ("testDeleteAll", testDeleteAll),
        ("testDeleteAllAsyncMainQueue", testDeleteAllAsyncMainQueue),
        ("testDeleteAsyncMainQueue", testDeleteAsyncMainQueue),
        ("testDeleteCommand", testDeleteCommand),
        ("testFetchAll", testFetchAll),
        ("testFetchAllAsyncMainQueue", testFetchAllAsyncMainQueue),
        ("testFetchCommand", testFetchCommand),
        ("testFetchIncludeCommand", testFetchIncludeCommand),
        ("testFetchUpdatedCurrentInstallation", testFetchUpdatedCurrentInstallation),
        ("testFetchUpdatedCurrentInstallationAsync", testFetchUpdatedCurrentInstallationAsync),
        ("testInstallationCustomValuesNotSavedToKeychain", testInstallationCustomValuesNotSavedToKeychain),
        ("testInstallationHasApplicationBadge", testInstallationHasApplicationBadge),
        ("testInstallationImmutableFieldsCannotBeChangedInKeychain", testInstallationImmutableFieldsCannotBeChangedInKeychain),
        ("testInstallationImmutableFieldsCannotBeChangedInMemory", testInstallationImmutableFieldsCannotBeChangedInMemory),
        ("testInstallationMutableValuesCanBeChangedInMemory", testInstallationMutableValuesCanBeChangedInMemory),
        ("testNewInstallationIdentifierIsLowercase", testNewInstallationIdentifierIsLowercase),
        ("testSaveAll", testSaveAll),
        ("testSaveAllAsyncMainQueue", testSaveAllAsyncMainQueue),
        ("testSaveCommand", testSaveCommand),
        ("testUpdate", testUpdate),
        ("testUpdateAsyncMainQueue", testUpdateAsyncMainQueue),
        ("testUpdateCommand", testUpdateCommand),
        ("testUpdateToCurrentInstallation", testUpdateToCurrentInstallation),
    ]
}

extension ParseLiveQueryTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseLiveQueryTests = [
        ("testBecomingSocketAuthDelegate", testBecomingSocketAuthDelegate),
        ("testConnectedState", testConnectedState),
        ("testConnectionResponseDecoding", testConnectionResponseDecoding),
        ("testDeinitializingNewShouldNotEffectDefault", testDeinitializingNewShouldNotEffectDefault),
        ("testDisconnectedState", testDisconnectedState),
        ("testErrorResponseDecoding", testErrorResponseDecoding),
        ("testEventCreate", testEventCreate),
        ("testEventCreateSubscriptionCallback", testEventCreateSubscriptionCallback),
        ("testEventDelete", testEventDelete),
        ("testEventDeleteSubscriptionCallback", testEventDeleteSubscriptionCallback),
        ("testEventEnter", testEventEnter),
        ("testEventEnterSubscriptionCallback", testEventEnterSubscriptionCallback),
        ("testEventLeave", testEventLeave),
        ("testEventLeaveSubscriptioinCallback", testEventLeaveSubscriptioinCallback),
        ("testEventResponseDecoding", testEventResponseDecoding),
        ("testEventUpdate", testEventUpdate),
        ("testEventUpdateSubscriptionCallback", testEventUpdateSubscriptionCallback),
        ("testInitializeNewDefault", testInitializeNewDefault),
        ("testInitializeWithNewURL", testInitializeWithNewURL),
        ("testPreliminaryResponseDecoding", testPreliminaryResponseDecoding),
        ("testRandomIdGenerator", testRandomIdGenerator),
        ("testReconnectInterval", testReconnectInterval),
        ("testRedirectResponseDecoding", testRedirectResponseDecoding),
        ("testResubscribing", testResubscribing),
        ("testResubscribingSubscriptionCallback", testResubscribingSubscriptionCallback),
        ("testServerErrorResponse", testServerErrorResponse),
        ("testServerErrorResponseNoReconnect", testServerErrorResponseNoReconnect),
        ("testServerRedirectResponse", testServerRedirectResponse),
        ("testSocketDisconnectedState", testSocketDisconnectedState),
        ("testSocketNotOpenState", testSocketNotOpenState),
        ("testStandardMessageEncoding", testStandardMessageEncoding),
        ("testSubscribeCallbackConnected", testSubscribeCallbackConnected),
        ("testSubscribeConnected", testSubscribeConnected),
        ("testSubscribeMessageEncoding", testSubscribeMessageEncoding),
        ("testSubscribeNotConnected", testSubscribeNotConnected),
        ("testSubscriptionUpdate", testSubscriptionUpdate),
        ("testSubscriptionUpdateSubscriptionCallback", testSubscriptionUpdateSubscriptionCallback),
        ("testUnsubscribeResponseDecoding", testUnsubscribeResponseDecoding),
        ("testUserClosedConnectionState", testUserClosedConnectionState),
        ("testWebsocketURL", testWebsocketURL),
    ]
}

extension ParseObjectBatchTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseObjectBatchTests = [
        ("testDeleteAll", testDeleteAll),
        ("testDeleteAllAsyncMainQueue", testDeleteAllAsyncMainQueue),
        ("testDeleteAllAsyncMainQueueError", testDeleteAllAsyncMainQueueError),
        ("testDeleteAllError", testDeleteAllError),
        ("testFetchAll", testFetchAll),
        ("testFetchAllAsyncMainQueue", testFetchAllAsyncMainQueue),
        ("testSaveAll", testSaveAll),
        ("testSaveAllAsyncMainQueue", testSaveAllAsyncMainQueue),
        ("testSaveAllCommand", testSaveAllCommand),
        ("testSaveAllErrorIncorrectServerResponse", testSaveAllErrorIncorrectServerResponse),
        ("testSaveAllMixed", testSaveAllMixed),
        ("testThreadSafeFetchAllAsync", testThreadSafeFetchAllAsync),
        ("testThreadSafeSaveAllAsync", testThreadSafeSaveAllAsync),
        ("testThreadSafeUpdateAllAsync", testThreadSafeUpdateAllAsync),
        ("testUpdateAll", testUpdateAll),
        ("testUpdateAllAsyncMainQueue", testUpdateAllAsyncMainQueue),
        ("testUpdateAllCommand", testUpdateAllCommand),
        ("testUpdateAllErrorIncorrectServerResponse", testUpdateAllErrorIncorrectServerResponse),
    ]
}

extension ParseObjectCombineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseObjectCombineTests = [
        ("testDelete", testDelete),
        ("testDeleteAll", testDeleteAll),
        ("testFetch", testFetch),
        ("testFetchAll", testFetchAll),
        ("testSave", testSave),
        ("testSaveAll", testSaveAll),
    ]
}

extension ParseObjectTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseObjectTests = [
        ("testDeepSaveDetectCircular", testDeepSaveDetectCircular),
        ("testDeepSaveObjectWithFile", testDeepSaveObjectWithFile),
        ("testDeepSaveOfUnsavedPointerArrayFails", testDeepSaveOfUnsavedPointerArrayFails),
        ("testDeepSaveOneDeep", testDeepSaveOneDeep),
        ("testDeepSavePointerArray", testDeepSavePointerArray),
        ("testDeepSaveTwoDeep", testDeepSaveTwoDeep),
        ("testDelete", testDelete),
        ("testDeleteAsyncMainQueue", testDeleteAsyncMainQueue),
        ("testDeleteAsyncMainQueueError", testDeleteAsyncMainQueueError),
        ("testDeleteCommand", testDeleteCommand),
        ("testDeleteError", testDeleteError),
        ("testFetch", testFetch),
        ("testFetchAsyncMainQueue", testFetchAsyncMainQueue),
        ("testFetchBasedOnObjectId", testFetchBasedOnObjectId),
        ("testFetchCommand", testFetchCommand),
        ("testFetchIncludeCommand", testFetchIncludeCommand),
        ("testSave", testSave),
        ("testSaveAsyncMainQueue", testSaveAsyncMainQueue),
        ("testSaveCommand", testSaveCommand),
        ("testThreadSafeDeleteAsync", testThreadSafeDeleteAsync),
        ("testThreadSafeFetchAsync", testThreadSafeFetchAsync),
        ("testThreadSafeSaveAsync", testThreadSafeSaveAsync),
        ("testThreadSafeUpdateAsync", testThreadSafeUpdateAsync),
        ("testUpdate", testUpdate),
        ("testUpdateAsyncMainQueue", testUpdateAsyncMainQueue),
        ("testUpdateCommand", testUpdateCommand),
    ]
}

extension ParseOperationCombineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseOperationCombineTests = [
        ("testSave", testSave),
    ]
}

extension ParseOperationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseOperationTests = [
        ("testAdd", testAdd),
        ("testAddKeypath", testAddKeypath),
        ("testAddOptionalKeypath", testAddOptionalKeypath),
        ("testAddRelation", testAddRelation),
        ("testAddRelationKeypath", testAddRelationKeypath),
        ("testAddRelationOptionalKeypath", testAddRelationOptionalKeypath),
        ("testAddUnique", testAddUnique),
        ("testAddUniqueKeypath", testAddUniqueKeypath),
        ("testAddUniqueOptionalKeypath", testAddUniqueOptionalKeypath),
        ("testIncrement", testIncrement),
        ("testRemove", testRemove),
        ("testRemoveKeypath", testRemoveKeypath),
        ("testRemoveOptionalKeypath", testRemoveOptionalKeypath),
        ("testRemoveRelation", testRemoveRelation),
        ("testRemoveRelationKeypath", testRemoveRelationKeypath),
        ("testRemoveRelationOptionalKeypath", testRemoveRelationOptionalKeypath),
        ("testSave", testSave),
        ("testSaveAsyncMainQueue", testSaveAsyncMainQueue),
        ("testSaveCommand", testSaveCommand),
        ("testUnset", testUnset),
        ("testUnsetKeypath", testUnsetKeypath),
    ]
}

extension ParsePointerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParsePointerTests = [
        ("testFetch", testFetch),
        ("testFetchAsyncMainQueue", testFetchAsyncMainQueue),
        ("testPointer", testPointer),
        ("testThreadSafeFetchAsync", testThreadSafeFetchAsync),
    ]
}

extension ParseQueryCombineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseQueryCombineTests = [
        ("testAggregate", testAggregate),
        ("testCount", testCount),
        ("testCountExplain", testCountExplain),
        ("testFind", testFind),
        ("testFindExplain", testFindExplain),
        ("testFirst", testFirst),
        ("testFirstExplain", testFirstExplain),
    ]
}

extension ParseQueryTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseQueryTests = [
        ("testAddingConstraints", testAddingConstraints),
        ("testAggregate", testAggregate),
        ("testAggregateAsyncMainQueue", testAggregateAsyncMainQueue),
        ("testAggregateCommand", testAggregateCommand),
        ("testAggregateWhereAsyncMainQueue", testAggregateWhereAsyncMainQueue),
        ("testAggregateWithWhere", testAggregateWithWhere),
        ("testAndQuery", testAndQuery),
        ("testConstructors", testConstructors),
        ("testCount", testCount),
        ("testCountAsyncMainQueue", testCountAsyncMainQueue),
        ("testDistinct", testDistinct),
        ("testEndPoints", testEndPoints),
        ("testExcludeKeys", testExcludeKeys),
        ("testExplainCountAsynchronous", testExplainCountAsynchronous),
        ("testExplainCountSynchronous", testExplainCountSynchronous),
        ("testExplainFindAsynchronous", testExplainFindAsynchronous),
        ("testExplainFindSynchronous", testExplainFindSynchronous),
        ("testExplainFirstAsynchronous", testExplainFirstAsynchronous),
        ("testExplainFirstSynchronous", testExplainFirstSynchronous),
        ("testFind", testFind),
        ("testFindAsyncMainQueue", testFindAsyncMainQueue),
        ("testFindEncoded", testFindEncoded),
        ("testFirst", testFirst),
        ("testFirstAsyncMainQueue", testFirstAsyncMainQueue),
        ("testFirstAsyncNoObjectFoundMainQueue", testFirstAsyncNoObjectFoundMainQueue),
        ("testFirstNoObjectFound", testFirstNoObjectFound),
        ("testHintCountAsynchronous", testHintCountAsynchronous),
        ("testHintCountSynchronous", testHintCountSynchronous),
        ("testHintFindAsynchronous", testHintFindAsynchronous),
        ("testHintFindSynchronous", testHintFindSynchronous),
        ("testHintFirstAsynchronous", testHintFirstAsynchronous),
        ("testHintFirstSynchronous", testHintFirstSynchronous),
        ("testIncludeAllKeys", testIncludeAllKeys),
        ("testIncludeKeys", testIncludeKeys),
        ("testLimit", testLimit),
        ("testNorQuery", testNorQuery),
        ("testOrder", testOrder),
        ("testOrQuery", testOrQuery),
        ("testReadPreferences", testReadPreferences),
        ("testSelectKeys", testSelectKeys),
        ("testSkip", testSkip),
        ("testStaticProperties", testStaticProperties),
        ("testThreadSafeCountAsync", testThreadSafeCountAsync),
        ("testThreadSafeFindAsync", testThreadSafeFindAsync),
        ("testThreadSafeFirstAsync", testThreadSafeFirstAsync),
        ("testThreadSafeFirstAsyncNoObjectFound", testThreadSafeFirstAsyncNoObjectFound),
        ("testWhereContainedBy", testWhereContainedBy),
        ("testWhereContainedIn", testWhereContainedIn),
        ("testWhereContainsAll", testWhereContainsAll),
        ("testWhereKeyContainsString", testWhereKeyContainsString),
        ("testWhereKeyDoesNotExist", testWhereKeyDoesNotExist),
        ("testWhereKeyDoesNotMatchKeyInQuery", testWhereKeyDoesNotMatchKeyInQuery),
        ("testWhereKeyDoesNotMatchQuery", testWhereKeyDoesNotMatchQuery),
        ("testWhereKeyEqualTo", testWhereKeyEqualTo),
        ("testWhereKeyExists", testWhereKeyExists),
        ("testWhereKeyGreaterThan", testWhereKeyGreaterThan),
        ("testWhereKeyGreaterThanOrEqualTo", testWhereKeyGreaterThanOrEqualTo),
        ("testWhereKeyHasPrefix", testWhereKeyHasPrefix),
        ("testWhereKeyHasSuffix", testWhereKeyHasSuffix),
        ("testWhereKeyLessThan", testWhereKeyLessThan),
        ("testWhereKeyLessThanOrEqualTo", testWhereKeyLessThanOrEqualTo),
        ("testWhereKeyMatchesKeyInQuery", testWhereKeyMatchesKeyInQuery),
        ("testWhereKeyMatchesQuery", testWhereKeyMatchesQuery),
        ("testWhereKeyMatchesRegex", testWhereKeyMatchesRegex),
        ("testWhereKeyMatchesRegexModifiers", testWhereKeyMatchesRegexModifiers),
        ("testWhereKeyMatchesText", testWhereKeyMatchesText),
        ("testWhereKeyNearGeoBox", testWhereKeyNearGeoBox),
        ("testWhereKeyNearGeoPoint", testWhereKeyNearGeoPoint),
        ("testWhereKeyNearGeoPointWithinKilometers", testWhereKeyNearGeoPointWithinKilometers),
        ("testWhereKeyNearGeoPointWithinMiles", testWhereKeyNearGeoPointWithinMiles),
        ("testWhereKeyNearGeoPointWithinRadians", testWhereKeyNearGeoPointWithinRadians),
        ("testWhereKeyNearGeoPointWithinRadiansNotSorted", testWhereKeyNearGeoPointWithinRadiansNotSorted),
        ("testWhereKeyNotEqualTo", testWhereKeyNotEqualTo),
        ("testWhereKeyPolygonContains", testWhereKeyPolygonContains),
        ("testWhereKeyRelated", testWhereKeyRelated),
        ("testWhereKeyRelativeToTime", testWhereKeyRelativeToTime),
        ("testWhereKeyWithinPolygon", testWhereKeyWithinPolygon),
        ("testWhereNotContainedIn", testWhereNotContainedIn),
    ]
}

extension ParseRelationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseRelationTests = [
        ("testAddIncorrectClassError", testAddIncorrectClassError),
        ("testAddIncorrectKeyError", testAddIncorrectKeyError),
        ("testAddOperations", testAddOperations),
        ("testAddOperationsKeyCheck", testAddOperationsKeyCheck),
        ("testEncoding", testEncoding),
        ("testInitWithChild", testInitWithChild),
        ("testParseObjectRelation", testParseObjectRelation),
        ("testQuery", testQuery),
        ("testRemoveIncorrectClassError", testRemoveIncorrectClassError),
        ("testRemoveIncorrectKeyError", testRemoveIncorrectKeyError),
        ("testRemoveOperations", testRemoveOperations),
        ("testRemoveOperationsKeyCheck", testRemoveOperationsKeyCheck),
    ]
}

extension ParseRoleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseRoleTests = [
        ("testEndPoint", testEndPoint),
        ("testName", testName),
        ("testRoleAddIncorrectClassKeyError", testRoleAddIncorrectClassKeyError),
        ("testRoleAddIncorrectKeyError", testRoleAddIncorrectKeyError),
        ("testRoleAddOperation", testRoleAddOperation),
        ("testRoleQuery", testRoleQuery),
        ("testRoleRemoveIncorrectClassKeyError", testRoleRemoveIncorrectClassKeyError),
        ("testRoleRemoveIncorrectKeyError", testRoleRemoveIncorrectKeyError),
        ("testRoleRemoveOperation", testRoleRemoveOperation),
        ("testUserAddIncorrectClassKeyError", testUserAddIncorrectClassKeyError),
        ("testUserAddIncorrectKeyError", testUserAddIncorrectKeyError),
        ("testUserAddOperation", testUserAddOperation),
        ("testUserQuery", testUserQuery),
        ("testUserRemoveIncorrectClassKeyError", testUserRemoveIncorrectClassKeyError),
        ("testUserRemoveIncorrectKeyError", testUserRemoveIncorrectKeyError),
        ("testUserRemoveOperation", testUserRemoveOperation),
    ]
}

extension ParseSessionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseSessionTests = [
        ("testEndPoint", testEndPoint),
        ("testFetchCommand", testFetchCommand),
    ]
}

extension ParseUserCombineTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseUserCombineTests = [
        ("testBecome", testBecome),
        ("testDelete", testDelete),
        ("testDeleteAll", testDeleteAll),
        ("testFetch", testFetch),
        ("testFetchAll", testFetchAll),
        ("testLogin", testLogin),
        ("testLogout", testLogout),
        ("testLogoutError", testLogoutError),
        ("testPasswordReset", testPasswordReset),
        ("testPasswordResetError", testPasswordResetError),
        ("testSave", testSave),
        ("testSaveAll", testSaveAll),
        ("testSignup", testSignup),
        ("testVerificationEmail", testVerificationEmail),
        ("testVerificationEmailError", testVerificationEmailError),
    ]
}

extension ParseUserTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParseUserTests = [
        ("testBecome", testBecome),
        ("testBecomeAsync", testBecomeAsync),
        ("testDelete", testDelete),
        ("testDeleteAll", testDeleteAll),
        ("testDeleteAllAsyncMainQueue", testDeleteAllAsyncMainQueue),
        ("testDeleteAsyncMainQueue", testDeleteAsyncMainQueue),
        ("testDeleteCommand", testDeleteCommand),
        ("testFetch", testFetch),
        ("testFetchAll", testFetchAll),
        ("testFetchAllAsyncMainQueue", testFetchAllAsyncMainQueue),
        ("testFetchAndUpdateCurrentUser", testFetchAndUpdateCurrentUser),
        ("testFetchAsyncAndUpdateCurrentUser", testFetchAsyncAndUpdateCurrentUser),
        ("testFetchCommand", testFetchCommand),
        ("testFetchIncludeCommand", testFetchIncludeCommand),
        ("testLogin", testLogin),
        ("testLoginAsyncMainQueue", testLoginAsyncMainQueue),
        ("testLoginCommand", testLoginCommand),
        ("testLogout", testLogout),
        ("testLogoutAsyncMainQueue", testLogoutAsyncMainQueue),
        ("testLogutCommand", testLogutCommand),
        ("testMeCommand", testMeCommand),
        ("testPasswordReset", testPasswordReset),
        ("testPasswordResetCommand", testPasswordResetCommand),
        ("testPasswordResetError", testPasswordResetError),
        ("testPasswordResetMainQueue", testPasswordResetMainQueue),
        ("testPasswordResetMainQueueError", testPasswordResetMainQueueError),
        ("testSaveAll", testSaveAll),
        ("testSaveAllAsyncMainQueue", testSaveAllAsyncMainQueue),
        ("testSaveAndUpdateCurrentUser", testSaveAndUpdateCurrentUser),
        ("testSaveAsyncAndUpdateCurrentUser", testSaveAsyncAndUpdateCurrentUser),
        ("testSaveCommand", testSaveCommand),
        ("testSignUpAsyncMainQueue", testSignUpAsyncMainQueue),
        ("testSignupCommandWithBody", testSignupCommandWithBody),
        ("testThreadSafeFetchAsync", testThreadSafeFetchAsync),
        ("testThreadSafeUpdateAsync", testThreadSafeUpdateAsync),
        ("testUpdate", testUpdate),
        ("testUpdateAsyncMainQueue", testUpdateAsyncMainQueue),
        ("testUpdateCommand", testUpdateCommand),
        ("testUserCustomValuesNotSavedToKeychain", testUserCustomValuesNotSavedToKeychain),
        ("testUserSignUp", testUserSignUp),
        ("testVerificationEmailRequestCommand", testVerificationEmailRequestCommand),
        ("testVerificationEmailRequestError", testVerificationEmailRequestError),
        ("testVerificationEmailRequestMainQueue", testVerificationEmailRequestMainQueue),
        ("testVerificationEmailRequestMainQueueError", testVerificationEmailRequestMainQueueError),
        ("testVerificationEmailRequestReset", testVerificationEmailRequestReset),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(APICommandTests.__allTests__APICommandTests),
        testCase(AnyCodableTests.__allTests__AnyCodableTests),
        testCase(AnyDecodableTests.__allTests__AnyDecodableTests),
        testCase(AnyEncodableTests.__allTests__AnyEncodableTests),
        testCase(BatchUtilsTests.__allTests__BatchUtilsTests),
        testCase(HashTests.__allTests__HashTests),
        testCase(KeychainStoreTests.__allTests__KeychainStoreTests),
        testCase(ParseACLTests.__allTests__ParseACLTests),
        testCase(ParseAnonymousTests.__allTests__ParseAnonymousTests),
        testCase(ParseAppleCombineTests.__allTests__ParseAppleCombineTests),
        testCase(ParseAppleTests.__allTests__ParseAppleTests),
        testCase(ParseAuthenticationCombineTests.__allTests__ParseAuthenticationCombineTests),
        testCase(ParseAuthenticationTests.__allTests__ParseAuthenticationTests),
        testCase(ParseCloudCombineTests.__allTests__ParseCloudCombineTests),
        testCase(ParseCloudTests.__allTests__ParseCloudTests),
        testCase(ParseConfigCombineTests.__allTests__ParseConfigCombineTests),
        testCase(ParseConfigTests.__allTests__ParseConfigTests),
        testCase(ParseEncoderTests.__allTests__ParseEncoderTests),
        testCase(ParseFileCombineTests.__allTests__ParseFileCombineTests),
        testCase(ParseFileManagerTests.__allTests__ParseFileManagerTests),
        testCase(ParseFileTests.__allTests__ParseFileTests),
        testCase(ParseGeoPointTests.__allTests__ParseGeoPointTests),
        testCase(ParseInstallationCombineTests.__allTests__ParseInstallationCombineTests),
        testCase(ParseInstallationTests.__allTests__ParseInstallationTests),
        testCase(ParseLiveQueryTests.__allTests__ParseLiveQueryTests),
        testCase(ParseObjectBatchTests.__allTests__ParseObjectBatchTests),
        testCase(ParseObjectCombineTests.__allTests__ParseObjectCombineTests),
        testCase(ParseObjectTests.__allTests__ParseObjectTests),
        testCase(ParseOperationCombineTests.__allTests__ParseOperationCombineTests),
        testCase(ParseOperationTests.__allTests__ParseOperationTests),
        testCase(ParsePointerTests.__allTests__ParsePointerTests),
        testCase(ParseQueryCombineTests.__allTests__ParseQueryCombineTests),
        testCase(ParseQueryTests.__allTests__ParseQueryTests),
        testCase(ParseRelationTests.__allTests__ParseRelationTests),
        testCase(ParseRoleTests.__allTests__ParseRoleTests),
        testCase(ParseSessionTests.__allTests__ParseSessionTests),
        testCase(ParseUserCombineTests.__allTests__ParseUserCombineTests),
        testCase(ParseUserTests.__allTests__ParseUserTests),
    ]
}
#endif
