name: ci
on:
  push:
    branches: [ main ]
  pull_request:
    branches: '*'
env:
  CI_XCODE_VER: '/Applications/Xcode_11.7.app/Contents/Developer'
  CI_XCODE_13: '/Applications/Xcode_13.1.app/Contents/Developer'

jobs:
  xcode-test-ios:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Version
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -version
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}
    - name: Build-Test
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -workspace Parse.xcworkspace -scheme ParseSwift\ \(iOS\) -destination platform\=iOS\ Simulator,name\=iPhone\ 12\ Pro\ Max -derivedDataPath DerivedData clean test | xcpretty
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}
    - name: Prepare codecov
      uses: sersoft-gmbh/swift-coverage-action@v2
      id: coverage-files
      with:
        format: lcov
        search-paths: ./DerivedData
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: ${{join(fromJSON(steps.coverage-files.outputs.files), ',')}}
        env_vars: IOS
        fail_ci_if_error: true
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}

  xcode-test-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Create and set the default keychain
      run: |
        security create-keychain -p "" temporary
        security default-keychain -s temporary
        security unlock-keychain -p "" temporary
        security set-keychain-settings -lut 7200 temporary
    - name: Build-Test
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -workspace Parse.xcworkspace -scheme ParseSwift\ \(macOS\) -destination platform\=macOS -derivedDataPath DerivedData clean test | xcpretty
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}
    - name: Prepare codecov
      uses: sersoft-gmbh/swift-coverage-action@v2
      id: coverage-files
      with:
        format: lcov
        search-paths: ./DerivedData
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: ${{join(fromJSON(steps.coverage-files.outputs.files), ',')}}
        env_vars: MACOS
        fail_ci_if_error: true
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}

  xcode-test-tvos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -workspace Parse.xcworkspace -scheme ParseSwift\ \(tvOS\) -destination platform\=tvOS\ Simulator,name\=Apple\ TV -derivedDataPath DerivedData clean test | xcpretty
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}
    - name: Prepare codecov
      uses: sersoft-gmbh/swift-coverage-action@v2
      id: coverage-files
      with:
        format: lcov
        search-paths: ./DerivedData
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: ${{join(fromJSON(steps.coverage-files.outputs.files), ',')}}
        env_vars: TVOS
        fail_ci_if_error: true
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}

  xcode-build-watchos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -target ParseSwift\ \(watchOS\) | xcpretty
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        env_vars: WATCHOS
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}

  spm-test:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Create and set the default keychain
      run: |
        security create-keychain -p "" temporary
        security default-keychain -s temporary
        security unlock-keychain -p "" temporary
        security set-keychain-settings -lut 7200 temporary
    - name: Build
      run: swift build -v
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}
    - name: Test
      run: swift test --enable-code-coverage -v
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}
    - name: Prepare codecov
      uses: sersoft-gmbh/swift-coverage-action@v2
      id: coverage-files
      with:
        format: lcov
        search-paths: ./.build
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: ${{join(fromJSON(steps.coverage-files.outputs.files), ',')}}
        env_vars: SPM
        fail_ci_if_error: true
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}

  spm-test-5_2:
    needs: xcode-build-watchos
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Create and set the default keychain
      run: |
        security create-keychain -p "" temporary
        security default-keychain -s temporary
        security unlock-keychain -p "" temporary
        security set-keychain-settings -lut 7200 temporary
    - name: Build
      run: swift build -v
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_VER }}
    - name: Test
      run: swift test --enable-code-coverage -v
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_VER }}
    - name: Prepare codecov
      uses: sersoft-gmbh/swift-coverage-action@v2
      id: coverage-files
      with:
        format: lcov
        search-paths: ./.build
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: ${{join(fromJSON(steps.coverage-files.outputs.files), ',')}}
        env_vars: SPM5_2
        fail_ci_if_error: true
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_VER }}
 
  linux:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: sersoft-gmbh/SwiftyActions@v1
        with:
          release-version: "5"
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        run: swift build
      - name: Test
        run: swift test --enable-test-discovery --enable-code-coverage
      - name: Prepare codecov
        run: |
          llvm-cov export -format="lcov" .build/x86_64-unknown-linux-gnu/debug/ParseSwiftPackageTests.xctest -instr-profile .build/x86_64-unknown-linux-gnu/debug/codecov/default.profdata > info_linux.lcov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          env_vars: LINUX
          fail_ci_if_error: true
          
  windows:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - uses: MaxDesiatov/swift-windows-action@v1
        with:
          swift-version: "5.5.1"
          shell-action: swift test --enable-test-discovery --enable-code-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          env_vars: WINDOWS
          fail_ci_if_error: true
  
  docs:
    needs: xcode-build-watchos
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache Gems
        id: cache-gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-v4-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-v4
      - name: Install Bundle
        run: |
          bundle config path vendor/bundle
          bundle install
      - name: Create Jazzy Docs
        run: ./Scripts/jazzy.sh
        env:
          BUILD_VERSION: '1.8.3'
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}
    
  cocoapods:
    needs: xcode-build-watchos
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Update Framework Version
        run: ./Scripts/update_build
        env:
          BUILD_VERSION: '1.8.3'
      - name: CocoaPods
        run: pod lib lint --allow-warnings
        env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}

  carthage:
   needs: xcode-build-watchos
   runs-on: macos-latest
   steps:
     - uses: actions/checkout@v2
     - name: Carthage 
       run: ./carthage.sh build --no-skip-current --use-xcframeworks
       env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13 }}
