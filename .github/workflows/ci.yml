name: ci
on:
  push:
    branches: [ main ]
  pull_request:
    branches: '*'
env:
  CI_XCODE_VER: '/Applications/Xcode_11.7.app/Contents/Developer'
  CI_XCODE_13_VER: '/Applications/Xcode_13.0.app/Contents/Developer'

jobs:
  xcode-test-ios:
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Version
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -version
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13_VER }}
    - name: Build-Test
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -workspace Parse.xcworkspace -scheme ParseSwift\ \(iOS\) -destination platform\=iOS\ Simulator,name\=iPhone\ 12\ Pro\ Max test | xcpretty
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13_VER }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13_VER }}

  xcode-test-macos:
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Create and set the default keychain
      run: |
        security create-keychain -p "" temporary
        security default-keychain -s temporary
        security unlock-keychain -p "" temporary
        security set-keychain-settings -lut 7200 temporary
    - name: Build-Test
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -workspace Parse.xcworkspace -scheme ParseSwift\ \(macOS\) -destination platform\=macOS test | xcpretty
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13_VER }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13_VER }}

  xcode-test-tvos:
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -workspace Parse.xcworkspace -scheme ParseSwift\ \(tvOS\) -destination platform\=tvOS\ Simulator,name\=Apple\ TV test | xcpretty
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13_VER }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13_VER }}

  xcode-build-watchos:
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -target ParseSwift\ \(watchOS\) | xcpretty
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13_VER }}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13_VER }}

  spm-test:
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Create and set the default keychain
      run: |
        security create-keychain -p "" temporary
        security default-keychain -s temporary
        security unlock-keychain -p "" temporary
        security set-keychain-settings -lut 7200 temporary
    - name: Build
      run: swift build -v
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13_VER }}
    - name: Test
      run: swift test --enable-code-coverage -v
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13_VER }}
    - name: Prepare codecov
      run: xcrun llvm-cov export -format="lcov" .build/debug/ParseSwiftPackageTests.xctest/Contents/MacOS/ParseSwiftPackageTests -instr-profile .build/debug/codecov/default.profdata > info.lcov
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13_VER }}
    - name: Send codecov
      run: bash <(curl https://codecov.io/bash)

  spm-test-5_2:
    needs: xcode-build-watchos
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Create and set the default keychain
      run: |
        security create-keychain -p "" temporary
        security default-keychain -s temporary
        security unlock-keychain -p "" temporary
        security set-keychain-settings -lut 7200 temporary
    - name: Build
      run: swift build -v
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_VER }}
    - name: Test
      run: swift test --enable-code-coverage -v
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_VER }}
    - name: Prepare codecov
      run: xcrun llvm-cov export -format="lcov" .build/debug/ParseSwiftPackageTests.xctest/Contents/MacOS/ParseSwiftPackageTests -instr-profile .build/debug/codecov/default.profdata > info.lcov
      env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_VER }}
    - name: Send codecov
      run: bash <(curl https://codecov.io/bash)
 
  linux:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: sersoft-gmbh/SwiftyActions@v1
        with:
          release-version: 5.5
      - name: Build
        run: swift build
      - name: Test
        run: swift test --enable-test-discovery --enable-code-coverage
      - name: Prepare codecov
        run: llvm-cov export -format="lcov" .build/x86_64-unknown-linux-gnu/debug/ParseSwiftPackageTests.xctest -instr-profile .build/x86_64-unknown-linux-gnu/debug/codecov/default.profdata > info.lcov
      - name: Send codecov
        run: bash <(curl https://codecov.io/bash)

  docs:
    needs: xcode-build-watchos
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - name: Cache Gems
        id: cache-gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-v4-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-v4
      - name: Install Bundle
        run: |
          bundle config path vendor/bundle
          bundle install
      - name: Create Jazzy Docs
        run: ./Scripts/jazzy.sh
        env:
          BUILD_VERSION: '1.8.3'
    
  cocoapods:
    needs: xcode-build-watchos
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - name: Update Framework Version
        run: ./Scripts/update_build
        env:
          BUILD_VERSION: '1.8.3'
      - name: CocoaPods
        run: pod lib lint --allow-warnings
        env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13_VER }}

  carthage:
   needs: xcode-build-watchos
   runs-on: macos-11
   steps:
     - uses: actions/checkout@v2
     - name: Carthage 
       run: ./carthage.sh build --no-skip-current --use-xcframeworks
       env:
          DEVELOPER_DIR: ${{ env.CI_XCODE_13_VER }}
